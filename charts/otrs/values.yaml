image:
  repository: juanluisbaptiste/otrs
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "6.0.39"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
replicaCount: 1

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  sablier:
    enabled: true
    url: http://sablier.example:10000
    showDetails: false
    refreshFrequency: 5s
    sessionDuration: 120m
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 700m
    memory: 1536Mi
  requests:
    cpu: 100m
    memory: 768Mi

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: true
  storageClass: "-"
  size: 5Gi
  accessMode: ReadWriteOnce
  existingClaim: ""

readinessProbe:
  enabled: true
  spec:
    httpGet:
      path: /
      port: 80
      scheme: HTTP

livenessProbe:
  enabled: true
  spec:
    httpGet:
      path: /
      port: 80
      scheme: HTTP
    initialDelaySeconds: 180
    periodSeconds: 60
    timeoutSeconds: 30

# -- startupProbes will be enabled only if the cluster supports them
startupProbe:
  enabled: true
  spec:
    httpGet:
      path: /
      port: 80
      scheme: HTTP
    failureThreshold: 70
    periodSeconds: 10

properties:
  plugins:
    itsm: true
    itsmPluginDownloadUrl: 'https://static.mrezhi.net/utp/otrs-addons/ITSM-6.0.31.opm'
    faq: true
    faqPluginDownloadUrl: 'https://static.mrezhi.net/utp/otrs-addons/FAQ-6.0.33.opm'
  # -- no effect if mariadb.enabled is true
  db:
    name: ''
    host: ''
    port: ''
    otrsUsername: ''
    otrsPassword: ''
    rootPassword: ''
  otrsInstall: 'no'
  otrsBackupTime: 'disable'
  # -- leave empty to use changeme as the default
  otrsRootPassword: ''

mariadb:
  enabled: true
  auth:
    rootPassword: otrs
    database: otrs
    username: otrs
    password: otrs
  primary:
    persistence:
      enabled: true
      size: 8Gi

  image:
    repository: juanluisbaptiste/otrs-mariadb
    tag: latest
    pullPolicy: IfNotPresent

  resources:
    limits:
      cpu: 2000m
      memory: 3072Mi
    requests:
      cpu: 100m
      memory: 1536Mi

  readinessProbe:
    enabled: true
    tcpSocket:
      port: 3306

  livenessProbe:
    enabled: true
    spec:
      tcpSocket:
        port: 3306
      initialDelaySeconds: 180
      periodSeconds: 60
      timeoutSeconds: 30

  # -- startupProbes will be enabled only if the cluster supports them
  startupProbe:
    enabled: true
    spec:
      tcpSocket:
        port: 3306

  persistence:
    enabled: true
    storageClass: "-"
    size: 10Gi
    accessMode: ReadWriteOnce
    existingClaim: ""

  service:
    type: ClusterIP
    port: 3306
